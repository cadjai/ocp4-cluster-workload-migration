---
- name: '{{ ansible_name_module }} | Authenticate with the API'
  ansible.builtin.command: >
    {{ openshift_cli }} login \
      --token {{ backup_bucket_cluster_token }} \
      --insecure-skip-tls-verify=true {{ backup_bucket_cluster_console_url }}:{{ backup_bucket_cluster_console_port | d('6443', true) }}
  when:
    - not skip_api_login_logout is defined or not skip_api_login_logout | bool

- name: '{{ ansible_name_module }} | set namespace list if not provided'
  block:
    - name: '{{ ansible_name_module }} | ansible.builtin.command:{{ openshift_cli }} get | bucket OBC exist'
      ansible.builtin.shell: >
        {{ openshift_cli }} get obc {{ backup_bucket_name }} -n {{ backup_bucket_namespace }} --no-headers | awk '{print $1}'
      register: bucket_obc_retrieved

    - name: '{{ ansible_name_module }} | assert | the S3 bucket successfully retrieved'
      ansible.builtin.assert:
        that:
          - bucket_obc_retrieved is defined
          - bucket_obc_retrieved.stdout is defined
          - bucket_obc_retrieved.stdout != ''
        msg: "The S3 bucket OBC was not successfully retrieved "

    - name: '{{ ansible_name_module }} | ansible.builtin.command:{{ openshift_cli }} get | bucket secret exist'
      ansible.builtin.shell: >
        {{ openshift_cli }} get secret {{ backup_bucket_name }} -n {{ backup_bucket_namespace }} --no-headers | awk '{print $1}'
      register: bucket_secret_retrieved

    - name: '{{ ansible_name_module }} | assert | the S3 bucket secret successfully retrieved'
      ansible.builtin.assert:
        that:
          - bucket_secret_retrieved is defined
          - bucket_secret_retrieved.stdout is defined
          - bucket_secret_retrieved.stdout != ''
        msg: "The S3 bucket OBC was not successfully retrieved "

    - name: '{{ ansible_name_module }} | ansible.builtin.command:{{ openshift_cli }} get | bucket secret exist'
      ansible.builtin.shell: >
        {{ openshift_cli }} get secret {{ backup_bucket_name }} -n {{ backup_bucket_namespace }} --no-headers | awk '{print $1}'
      register: bucket_secret_retrieved

    - name: '{{ ansible_name_module }} | assert | the S3 bucket secret successfully retrieved'
      ansible.builtin.assert:
        that:
          - bucket_secret_retrieved is defined
          - bucket_secret_retrieved.stdout is defined
          - bucket_secret_retrieved.stdout != ''
        msg: "The S3 bucket OBC was not successfully retrieved "

    - name: '{{ ansible_name_module }} | ansible.builtin.command:{{ openshift_cli }} get | bucket cm exist'
      ansible.builtin.shell: >
        {{ openshift_cli }} get cm {{ backup_bucket_name }} -n {{ backup_bucket_namespace }} --no-headers | awk '{print $1}'
      register: bucket_cm_retrieved

    - name: '{{ ansible_name_module }} | assert | the S3 bucket CM successfully retrieved'
      ansible.builtin.assert:
        that:
          - bucket_cm_retrieved is defined
          - bucket_cm_retrieved.stdout is defined
          - bucket_cm_retrieved.stdout != ''
        msg: "The S3 bucket CM was not successfully retrieved "

    - name: '{{ ansible_name_module }} | template | create directory to store manifests'
      ansible.builtin.file:
        path: "{{ staging_dir | d('/tmp', true) }}/{{ backup_bucket_name }}"
        state: directory

    - name: '{{ ansible_name_module }} | shell:{{ openshift_cli }} extract | CM '
      ansible.builtin.command: >
        {{ openshift_cli }} extract cm/{{ backup_bucket_name }} -n {{ backup_bucket_namespace }} --confirm --to {{ staging_dir | d('/tmp', true) }}/{{ backup_bucket_name }}
      register: obc_cm_exracted 

    - name: '{{ ansible_name_module }} | shell:{{ openshift_cli }} extract | Secret '
      ansible.builtin.command: >
        {{ openshift_cli }} extract secret/{{ backup_bucket_name }} -n {{ backup_bucket_namespace }} --confirm --to {{ staging_dir | d('/tmp', true) }}/{{ backup_bucket_name }} 
      register: obc_secret_exracted 

    - name: '{{ ansible_name_module }} | shell:{{ openshift_cli }} get | S3 route '
      ansible.builtin.command: >
        {{ openshift_cli }} get route s3 -n openshift-storage -ojsonpath='{.spec.host}{"\n"}' 
      register: obc_route_exracted 

    - name: '{{ ansible_name_module }} | set_fact | set S3 bucket cred info file path '
      ansible.builtin.set_fact:
        extracted_file_access_key: "{{ staging_dir | d('/tmp', true) }}/{{ backup_bucket_name }}/AWS_ACCESS_KEY_ID"
        extracted_file_secret_key: "{{ staging_dir | d('/tmp', true) }}/{{ backup_bucket_name }}/AWS_SECRET_ACCESS_KEY"
        extracted_file_bucket: "{{ staging_dir | d('/tmp', true) }}/{{ backup_bucket_name }}/BUCKET_NAME"

    - name: '{{ ansible_name_module }} | set_fact | unset OADP variables '
      ansible.builtin.set_fact:
        oadp_bucket_access_key: 
        oadp_bucket_access_secret: 
        oadp_s3url: 
        oadp_s3_bucket: 

    - name: '{{ ansible_name_module }} | set_fact | OADP S3url '
      ansible.builtin.set_fact:
        oadp_s3url: "{{ obc_route_exracted.stdout }}"
      when:
        - obc_route_exracted is defined
        - obc_route_exracted.stdout is defined
        - obc_route_exracted.stdout != "" 

    - name: '{{ ansible_name_module }} | set_fact | OADP S3url '
      ansible.builtin.set_fact:
        oadp_bucket_access_key: "{{ lookup('ansible.builtin.file', extracted_file_access_key) }}"
        oadp_bucket_access_secret: "{{ lookup('ansible.builtin.file', extracted_file_secret_key) }}"
        oadp_s3_bucket: "{{ lookup('ansible.builtin.file', extracted_file_bucket) }}"

    - name: '{{ ansible_name_module }} | ansible.builtin.debug | Print S3url output '
      ansible.builtin.debug:
        var: oadp_s3url 
        verbosity: 2
      when:
        - oadp_s3url is defined
        - oadp_s3url != '' 

    - name: '{{ ansible_name_module }} | ansible.builtin.debug | Print oadp_bucket_access_key output '
      ansible.builtin.debug:
        var: oadp_bucket_access_key
        verbosity: 2
      when:
        - oadp_bucket_access_key is defined
        - oadp_bucket_access_key != '' 

    - name: '{{ ansible_name_module }} | ansible.builtin.debug | Print oadp_bucket_access_secret output '
      ansible.builtin.debug:
        var: oadp_bucket_access_secret 
        verbosity: 2
      when:
        - oadp_bucket_access_secret is defined
        - oadp_bucket_access_secret != '' 

    - name: '{{ ansible_name_module }} | ansible.builtin.debug | Print oadp_s3_bucket output '
      ansible.builtin.debug:
        var: oadp_s3_bucket
        verbosity: 2
      when:
        - oadp_s3_bucket is defined
        - oadp_s3_bucket != '' 

- name: '{{ ansible_name_module }} | Logout of the current source cluster to kill any session'
  ansible.builtin.command: >
    {{ openshift_cli }} logout \
      --insecure-skip-tls-verify=true -s {{ backup_bucket_cluster_console_url }}:{{ backup_bucket_cluster_console_port | d('6443', true) }}
  when:
    - not skip_api_login_logout is defined or not skip_api_login_logout | bool

