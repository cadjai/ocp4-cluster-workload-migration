- name: ' Konductor | Provision UPI Infra | process-failed-oadp-backups.ymlprocess-failed-oadp-backups.yml'
  hosts: localhost
  vars:
    ansible_python_interpreter: /usr/bin/python3
    module: "Process failed backup"
    ansible_name_module: " Post Cluster Installation | Configure Cluster application backup Service | {{ module }}"
  vars_files:
    - '../vars/vault.yml'
    - '../vars/common.yml'
    - '../vars/environment.yml'
    - '../vars/oadp-migration.yml'
  pre_tasks:
    - name: '{{ ansible_name_module }} | assert | ensure required variables are provided '
      assert:
        that:
          - oadp_backup_ns is defined and oadp_backup_ns != ''
        msg: "the oadp_backup_ns must be set to a valid namespace name where the backups are located "

    - name: '{{ ansible_name_module }} | {{ openshift_cli }} whoami | check if there is valid session'
      ansible.builtin.command: >
        {{ openshift_cli }} whoami
      ignore_errors: yes
      register: existing_session

    - name: '{{ ansible_name_module }} | import_tasks | Conditional import of ocp-cluster-login role'
      import_tasks: ../roles/ocp-cluster-login/tasks/main.yml
      when:
        - existing_session.rc > 0

  tasks:
    #- name: '{{ ansible_name_module }} | Retrieve Infrastructure Name'
    #  ansible.builtin.command: >
    #    {{ openshift_cli }} get infrastructure cluster -o jsonpath='{.status.infrastructureName}{"\n"}'
    #  register: cluster_infra_name

    #- name: '{{ ansible_name_module }} | set_fact | cluster_name '
    #  ansible.builtin.set_fact:
    #    cluster_name: "{{ cluster_infra_name.stdout }}"
    #  when:
    #    - cluster_infra_name.stdout is defined
    #    - cluster_infra_name.stdout != ''

    #- name: '{{ ansible_name_module }} | Retrieve Infrastructure ID'
    #  ansible.builtin.command: >
    #    {{ openshift_cli }} get clusterversion version -o jsonpath='{.spec.clusterID}{"\n"}'
    #  register: cluster_infra_id

    #- name: '{{ ansible_name_module }} | set_fact | cluster_id '
    #  ansible.builtin.set_fact:
    #    cluster_id: "{{ cluster_infra_id.stdout }}"
    #  when:
    #    - cluster_infra_id.stdout is defined
    #    - cluster_infra_id.stdout != ''

    - name: '{{ ansible_name_module }} | import_tasks | Import additional OADP schedule CR processing tasks'
      ansible.builtin.import_tasks: tasks/retrieve-failed-backups.yml

