---
- name: Create HAProxy configuration directory
  ansible.builtin.file:
    path: /opt/haproxy/config
    state: directory
    mode: '0755'
  become: yes

- name: Create HAProxy SSL directory
  ansible.builtin.file:
    path: /opt/haproxy/ssl
    state: directory
    mode: '0755'
  become: yes
  when: ssl_config.enabled

- name: Create HAProxy test SSL key and cert directories
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: '0755'
  become: yes
  when: ssl_config.enabled
  loop:
    - "{{ ssl_config.cert_path | dirname }}"
    - "{{ ssl_config.key_path | dirname }}"

- name: Generate HAProxy configuration file
  ansible.builtin.template:
    src: haproxy-blue-green.cfg.j2
    dest: /opt/haproxy/config/haproxy.cfg
    mode: '0644'
    backup: yes
  become: yes
  notify:
    - restart haproxy container

- name: Create HAProxy error pages directory
  ansible.builtin.file:
    path: /opt/haproxy/config/errors
    state: directory
    mode: '0755'
  become: yes

- name: Generate custom error pages
  ansible.builtin.copy:
    content: |
      HTTP/1.0 {{ item.code }} {{ item.message }}
      Cache-Control: no-cache
      Connection: close
      Content-Type: text/html

      <html><body><h1>{{ item.code }} {{ item.message }}</h1>
      <p>The requested resource is not available.</p>
      <p>Please contact your administrator if this problem persists.</p>
      </body></html>
    dest: /opt/haproxy/config/errors/{{ item.code }}.http
    mode: '0644'
  become: yes
  loop:
    - { code: 400, message: "Bad Request" }
    - { code: 403, message: "Forbidden" }
    - { code: 408, message: "Request Time-out" }
    - { code: 500, message: "Internal Server Error" }
    - { code: 502, message: "Bad Gateway" }
    - { code: 503, message: "Service Unavailable" }
    - { code: 504, message: "Gateway Time-out" }

- name: Create SSL certificate if not exists (self-signed for testing)
  ansible.builtin.command: |
    openssl req -x509 -newkey rsa:4096 -keyout {{ ssl_config.key_path }} \
    -out {{ ssl_config.cert_path }} -days 365 -nodes \
    -subj "/C=US/ST=State/L=City/O=Organization/CN=haproxy.local"
  args:
    creates: "{{ ssl_config.cert_path }}"
  become: yes
  when: ssl_config.enabled

- name: Combine SSL certificate and key for HAProxy
  ansible.builtin.shell: |
    cat {{ ssl_config.cert_path }} {{ ssl_config.key_path }} > /opt/haproxy/ssl/haproxy.pem
    cp {{ ssl_config.cert_path }} /opt/haproxy/ssl/haproxy.crt
    cp {{ ssl_config.key_path }} /opt/haproxy/ssl/haproxy.key
    chmod 644 /opt/haproxy/ssl/haproxy.*
  become: yes
  when: ssl_config.enabled
  notify:
    - restart haproxy container

- name: Set SELinux context for HAProxy directories (if SELinux is enabled)
  community.general.sefcontext:
    target: "{{ item }}"
    setype: container_file_t
    state: present
  loop:
    - "/opt/haproxy/config(/.*)?"
    - "/opt/haproxy/ssl(/.*)?"
  become: yes
  when: ansible_selinux.status == "enabled"
  ignore_errors: yes

- name: Apply SELinux context
  ansible.builtin.command: restorecon -R /opt/haproxy
  become: yes
  when: ansible_selinux.status == "enabled"
  ignore_errors: yes 
