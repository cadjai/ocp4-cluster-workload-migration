---
  ### Ensrue Migration Plan exist and in ready state before performing a migration 
- name: '{{ ansible_name_module }} | ansible.builtin.command:{{ openshift_cli }} get | get migplan state'
  ansible.builtin.shell: >
    {{ openshift_cli }} get migplan {{ mig_cntl_migplan_name }} --no-headers -n openshift-migration | awk '{print $2}'
  register: mig_plan_state

- name: '{{ ansible_name_module }} | assert | Ensure the MigPlan is defined and in ready state'
  ansible.builtin.assert:
    that:
      - mig_plan_state is defined
      - mig_plan_state.rc is defined
      - mig_plan_state.rc == 0 
      - mig_plan_state.stdout is defined
      - mig_plan_state.stdout != '' 
      - mig_plan_state.stdout | bool 
    msg: "The MigPlan CR is required and in Ready state to perfrom a migration "

- name: '{{ ansible_name_module }} | template | Render Mig migration CR manifests '
  ansible.builtin.template:
    src: "templates/mtc-migration-migmigration-customresource.yml.j2"
    dest: "{{ staging_dir | d('/tmp', true) }}/{{ mig_cntl_migplan_name }}-mtc-migration-migmigration-customresource.yml"
    force: yes
  register: mig_migration_crs_copied

- name: '{{ ansible_name_module }} | ansible.builtin.debug | Print output rendered manifests'
  ansible.builtin.debug:
    var: mig_migration_crs_copied
    verbosity: 2
  when:
    - mig_migration_crs_copied is defined
    - mig_migration_crs_copied.dest is defined
    - mig_migration_crs_copied.state is defined
    - "'file' in mig_migration_crs_copied.state"

- name: '{{ ansible_name_module }} | create Mig Plan related Manifests'
  when:
    - mig_migration_crs_copied is defined
  block:
    - name: '{{ ansible_name_module }} | ansible.builtin.command:{{ openshift_cli }} apply | create Mig Migration Manifest'
      ansible.builtin.command: >
        {{ openshift_cli }} apply -f {{ mig_migration_crs_copied.dest }}
      when:
        - mig_migration_crs_copied.dest is defined
        - mig_migration_crs_copied.state is defined
        - "'file' in mig_migration_crs_copied.state"
        - "'migmigration' in mig_migration_crs_copied.dest"
      register: migmigration_configs_applied

    - name: '{{ ansible_name_module }} | wait_for | wait for CR to be ready'
      ansible.builtin.wait_for:
        timeout: 15
      delegate_to: localhost

- name: '{{ ansible_name_module }} | template | Render Mig Analytic CR manifests '
  ansible.builtin.template:
    src: "templates/mtc-migration-mig-analytic.yml.j2"
    dest: "{{ staging_dir | d('/tmp', true) }}/{{ mig_cntl_migplan_name }}-mtc-migration-mig-analytic.yml"
    force: yes
  register: mig_analytic_cr_copied

- name: '{{ ansible_name_module }} | ansible.builtin.debug | Print output rendered manifests'
  ansible.builtin.debug:
    var: mig_analytic_cr_copied 
    verbosity: 2
  when:
    - mig_analytic_cr_copied is defined
    - mig_analytic_cr_copied.dest is defined
    - mig_analytic_cr_copied.state is defined

- name: '{{ ansible_name_module }} | create Mig Analythic related Manifests'
  when:
    - mig_analytic_cr_copied is defined
  block:
    - name: '{{ ansible_name_module }} | ansible.builtin.command:{{ openshift_cli }} apply | create Mig Analytic  Manifest'
      ansible.builtin.command: >
        {{ openshift_cli }} apply -f {{ mig_analytic_cr_copied.dest }}
      when:
        - mig_analytic_cr_copied.dest is defined
        - mig_analytic_cr_copied.state is defined
        - "'file' in mig_analytic_cr_copied.state"
        - "'analytic' in mig_analytic_cr_copied.dest"
      register: mig_anlytic_configs_applied

