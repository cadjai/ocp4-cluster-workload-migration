apiVersion: v1
kind: ConfigMap
metadata:
  name: haproxy-config
  namespace: haproxy-system
  labels:
    app: haproxy-blue-green
data:
  haproxy.cfg: |
    global
        daemon
        user haproxy
        group haproxy
        log stdout local0
        chroot /var/lib/haproxy
        stats socket /run/haproxy/admin.sock mode 660 level admin
        stats timeout 30s
        maxconn 4096
        
        # SSL/TLS configuration
        ssl-default-bind-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384
        ssl-default-bind-options ssl-min-ver TLSv1.2 no-tls-tickets

    defaults
        mode http
        log global
        option httplog
        option dontlognull
        option log-health-checks
        option forwardfor
        option http-server-close
        timeout connect 5000
        timeout client  50000
        timeout server  50000

    # Stats frontend
    frontend stats
        bind *:8404
        stats enable
        stats uri /stats
        stats refresh 30s
        stats auth admin:changeme

    # HTTP frontend
    frontend http_frontend
        bind *:80
        # Redirect HTTP to HTTPS
        redirect scheme https code 301

    # HTTPS frontend
    frontend https_frontend
        bind *:443 ssl crt /etc/ssl/haproxy.pem
        
        # Add security headers
        http-response set-header Strict-Transport-Security "max-age=31536000; includeSubDomains"
        http-response set-header X-Frame-Options "SAMEORIGIN"
        http-response set-header X-Content-Type-Options "nosniff"
        
        # Blue-Green routing logic for HTTPS
        use_backend %[req.hdr(host),map_dom(/usr/local/etc/haproxy/domain_map.txt,dev-blue)]

    # Backend for dev-blue
    backend dev-blue
        balance roundrobin
        option httpchk GET /health
        http-request set-header Host dev-blue.%[req.hdr(host),regsub(^[^.]+\.,)]
        server dev-blue-1 dev-blue.example.com:80 check
        server dev-blue-2 dev-blue-backup.example.com:80 check backup

    # Backend for dev-green
    backend dev-green
        balance roundrobin
        option httpchk GET /health
        http-request set-header Host dev-green.%[req.hdr(host),regsub(^[^.]+\.,)]
        server dev-green-1 dev-green.example.com:80 check
        server dev-green-2 dev-green-backup.example.com:80 check backup

  domain_map.txt: |
    # HAProxy Domain Mapping for Blue-Green Deployment
    # Format: source_domain backend_name
    
    # Mapping for dev environment
    dev.* dev-blue
    
    # Explicit blue/green mappings
    dev-blue.* dev-blue
    dev-green.* dev-green
    
    # Default fallback
    .* dev-blue 